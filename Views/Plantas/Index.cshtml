@model IEnumerable<Vivero.Models.Planta>

@{
    ViewData["Title"] = "Plantas";
}

@* Cambiar el nombre del h3 según el tipo elegido en el combobox (interior o exterior) *@
<div class="row">
  <div class="col-md-4">
    <h3 class="titulo">Plantas </h3>
  </div>
</div>

<div class="dropdown p-3 mb-2 bg-success">
  <button class="btn btn-outline-light dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-leaf"></i>
    Tipo de planta
  </button>
  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
    <a class="dropdown-item" href="#">Plantas de interior</a>
    <a class="dropdown-item" href="#">Plantas de exterior</a>
  </div>

<a asp-area="" asp-controller="Plantas" asp-action="Formulario">
  		<button type="button" class="btn btn-outline-light" asp-area="" asp-controller="Plantas" asp-action="Formulario" >
	 		 Formulario
	  	</button>
</a>


</div>

<h2>Estas son nuestras plantas</h2>

<p>Haz click alguna para conocerla más!</p>

<div id="btnContainer">
  <button class="btn active" onclick="listView()"><i class="fa fa-bars"></i> Lista</button> 
  <button class="btn" onclick="gridView()"><i class="fa fa-th-large"></i> Grilla</button>
</div>
<br>

<div class="row">
  <div button class="column" style="background-color:#aaa;">
    <h2>Column 1</h2>
    <p>Some text..</p>
  </div>
</div>  

<div class="row">
  <div class="column" style="background-color:#bbb;">
    <h2>Column 2</h2>
    <p>Some text..</p>
  </div>
</div>

<div class="row">
  <div class="column" style="background-color:#ccc;">
    <h2>Column 3</h2>
    <p>Some text..</p>
  </div>
</div>

<div class="row">
  <div class="column" style="background-color:#ddd;">
    <h2>Column 4</h2>
    <p>Some text..</p>
  </div>
</div>




<div class="card" style="width: 18rem;">
  <img src="..." class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title"></h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

@foreach (var item in Model)
{
    
<div class="card" style="width: 18rem;">
  <img src="@Html.DisplayFor(modelItem => item.imagePlanta)" class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Nombreplanta)</h5>
    <p class="card-text">@Html.DisplayFor(modelItem => item.precio)</p>
    <a href="#" class="btn btn-primary">COMPRAR</a>
  </div>
</div>


}












<script>
// Get the elements with class="column"
var elements = document.getElementsByClassName("column");

// Declare a loop variable
var i;

// List View
function listView() {
  for (i = 0; i < elements.length; i++) {
    elements[i].style.width = "100%";
  }
}

// Grid View
function gridView() {
  for (i = 0; i < elements.length; i++) {
    elements[i].style.width = "50%";
  }
}

/* Optional: Add active class to the current button (highlight it) */
var container = document.getElementById("btnContainer");
var btns = container.getElementsByClassName("btn");
for (var i = 0; i < btns.length; i++) {
  btns[i].addEventListener("click", function() {
    var current = document.getElementsByClassName("active");
    current[0].className = current[0].className.replace(" active", "");
    this.className += " active";
  });
}
</script>

